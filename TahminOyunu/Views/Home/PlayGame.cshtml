@model TahminOyunu.Models.PlayGameViewModel
@{
    ViewData["Title"] = "Oyunu Oyna";
    var categoryIdForLink = ViewBag.PreviousCategoryId;
}

<style>
    body {
        margin: 0;
        padding: 0;
        background: linear-gradient(135deg, #1e1e2f, #12121c); /* Sitenin ana arka planı */
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: white;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
    }

    .body-container {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 18px 0;
    }

    .game-container {
        max-width: 900px;
        padding: 35px;
        background-color: #2c2c3e; /* Oyun kutusunun arka planı */
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    }

    h3 {
        color: #f8f8f8;
        text-align: center;
        margin-bottom: 20px;
        font-size: 28px;
    }

    hr {
        border-color: #44445a;
        margin-bottom: 35px;
    }

    .image-container img {
        max-width: 100%;
        height: auto;
        max-height: 50000000000000000000px;
        display: block;
        margin: 25px auto;
        border: 1px solid #44445a;
        border-radius: 8px;
    }

    p {
        color: #dcdcdc;
        text-align: center;
        margin-bottom: 35px;
        font-size: 22px;
    }

    .guess-form .input-group {
        margin-bottom: 30px;
    }

    .form-control {
        background-color: #333347;
        color: #f8f8f8;
        border: 1px solid #44445a;
        border-radius: 6px;
        padding: 16px;
        font-size: 20px;
    }

        .form-control::placeholder {
            color: #a9a9b3;
            font-size: 22px;
        }

    .btn {
        padding: 16px 30px;
        border-radius: 6px;
        font-size: 22px;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    .btn-primary {
        background-color: #5cb85c;
        color: white;
        border: none;
    }

        .btn-primary:hover {
            background-color: #4cae4c;
        }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
        border: none;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    .btn-outline-info {
        color: #5bc0de;
        border: 1px solid #5bc0de;
        background-color: transparent;
    }

        .btn-outline-info:hover {
            background-color: #5bc0de;
            color: white;
        }

    .btn-outline-secondary {
        color: #6c757d;
        border: 1px solid #6c757d;
        background-color: transparent;
    }

        .btn-outline-secondary:hover {
            background-color: #6c757d;
            color: white;
        }

    .message-area {
        margin-top: 35px;
        padding: 22px;
        border-radius: 6px;
        text-align: center;
        font-size: 22px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border-color: #c3e6cb;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border-color: #f5c6cb;
    }

    .alert-info {
        background-color: #d1ecf1;
        color: #0c5460;
        border-color: #bee5eb;
    }

    .game-over-info h4 {
        margin-top: 30px;
        margin-bottom: 25px;
        color: #f8f8f8;
        font-size: 30px;
    }

    .action-buttons {
        margin-top: 50px;
        text-align: center;
    }

        .action-buttons a {
            margin: 0 25px;
            font-size: 22px;
        }

    /* GÜNCEL JQUERY UI AUTOCOMPLETE STİLLERİ (Arka plan beyaz, yazı koyu, kenarlık yok) */
    .ui-autocomplete {
        max-height: 250px;
        overflow-y: auto;
        overflow-x: hidden;
        background-color: #ffffff; /* Arka planı beyaz yaptık */
        border: none !important; /* Dışındaki tüm kenarlıkları kaldırdık */
        outline: none !important; /* Odak çemberini kaldırdık */
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.4); /* Gölgeyi koruduk */
        z-index: 1000;
        padding: 5px 0;
    }

    .ui-menu-item {
        padding: 12px 18px;
        font-size: 18px;
        color: #333333; /* Film isimleri için koyu gri/siyah renk */
        cursor: pointer;
        transition: background-color 0.2s ease, color 0.2s ease;
        border-bottom: 1px solid #f0f0f0; /* Açık renkli ayırıcı çizgi */
    }

    .ui-menu-item:last-child {
        border-bottom: none;
    }

    .ui-menu-item:hover,
    .ui-state-active {
        background-color: #e0e0e0 !important; /* Üzerine gelince veya seçilince açık gri vurgu */
        color: #000000 !important; /* Vurgulandığında siyah yazı */
        font-weight: bold;
        border-radius: 5px;
        margin: 0 5px;
        border: none !important; 
        outline: none !important;
    }

    /* Scrollbar stili */
    .ui-autocomplete::-webkit-scrollbar {
        width: 8px;
    }

    .ui-autocomplete::-webkit-scrollbar-track {
        background: #f0f0f0; /* Beyaz arka planla uyumlu track */
        border-radius: 10px;
    }

    .ui-autocomplete::-webkit-scrollbar-thumb {
        background: #cccccc; /* Açık gri thumb */
        border-radius: 10px;
    }

    .ui-autocomplete::-webkit-scrollbar-thumb:hover {
        background: #aaaaaa;
    }
</style>

<div class="container body-container">
    <div class="game-container">
        
        <h3>Tahmin Oyunu</h3>
        <hr />
        <div class="d-flex justify-content-between align-items-center px-3 mb-4 text-light" style="font-size: 16px;">

            @if (Model.PreviousMediaId != null)
            {
                <a class="text-light text-decoration-none" asp-action="PlayGame" asp-route-id="@Model.PreviousMediaId">
                    ← @(@Model.CurrentGameNumber - 1)
                </a>
            }
            else
            {
                <span class="invisible">←</span>
            }

            <span class="fst-italic fw-normal text-center">
                <strong>Oyun @Model.CurrentGameNumber</strong> – @Model.CreatedAt.ToString("dd.MM.yyyy")
            </span>

            @if (Model.NextMediaId != null)
            {
                <a class="text-light text-decoration-none" asp-action="PlayGame" asp-route-id="@Model.NextMediaId">
                    @(@Model.CurrentGameNumber + 1) →
                </a>
            }
            else
            {
                <span class="invisible">→</span>
            }

        </div>

        @if (Model != null)
        {
            <div class="image-container">
                <img id="gameImage" src="@Url.Content(Model.CurrentImagePath)" alt="Tahmin Edilecek Kare @Model.Attempts" />
            </div>
            @if (Model.AllImages != null && Model.AllImages.Count > 0)
            {
                <div class="d-flex justify-content-center gap-2 mt-4">
                    @for (int i = 0; i < Model.AllImages.Count; i++)
                    {
                        var isActive = i == Model.CurrentImageIndex;
                        var isVisible = i <= Model.Attempts - 1 || Model.GameOver;

                        <form asp-action="PlayGame" method="post">
                            <input type="hidden" name="submitButton" value="select" />
                            <input type="hidden" name="MediaId" value="@Model.MediaId" />
                            <input type="hidden" name="SelectedIndex" value="@i" />
                            <button type="submit"
                                    class="btn @(isActive ? "btn-primary" : "btn-outline-secondary")"
                                @(isVisible ? "" : "disabled")>
                                @(i + 1)
                            </button>
                        </form>
                    }
                </div>
            }

            @if (!Model.GameOver)
            {
                <p>Deneme Hakkı: @Model.Attempts / @Model.MaxAttempts</p>

                <form asp-action="PlayGame" method="post" id="guessForm" class="guess-form">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="MediaId" />

                    <div class="input-group mb-3">
                        <input type="text" name="UserGuess" id="UserGuess" class="form-control" placeholder="Tahmininizi yazın..." aria-label="Tahmin" />
                        <div class="input-group-append">
                            <button class="btn btn-primary" type="submit" name="submitButton" value="guess">Tahmin Et</button>
                            @if (Model.Attempts < Model.MaxAttempts)
                            {
                                <button class="btn btn-secondary" type="submit" name="submitButton" value="pass">Pas Geç</button>
                            }
                        </div>
                    </div>
                </form>
            }

            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div id="messageArea" class="message-area alert @(Model.IsCorrect ? "alert-success" : (Model.GameOver && !Model.IsCorrect ? "alert-danger" : "alert-info"))">
                    @Model.Message
                </div>
            }
            else if (Model.GameOver)
            {
                <div id="messageArea" class="message-area alert alert-info">
                    Oyun Bitti!
                </div>
            }

            <div class="action-buttons">
                @if (categoryIdForLink != null && (int)categoryIdForLink > 0)
                {
                    <a asp-action="GameList" asp-route-id="@categoryIdForLink" class="btn btn-outline-info">Oyun Listesine Dön</a>
                }
                <a asp-action="Index" class="btn btn-outline-secondary">Ana Sayfaya Dön</a>
            </div>
        }
        else
        {
            <div class="alert alert-danger" role="alert">
                Oyun bilgileri yüklenirken bir hata oluştu. Lütfen tekrar deneyin.
            </div>
            
        }
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

    <script>
        window.onload = function () {
            var guessInput = document.querySelector('input[name="UserGuess"]');
            if (guessInput && !'@Model.GameOver') {
                guessInput.focus();
            }
        };

        document.addEventListener('DOMContentLoaded', function () {
            const guessForm = document.getElementById('guessForm');
            const guessInput = document.querySelector('input[name="UserGuess"]');
            const passButton = document.querySelector('button[name="submitButton"][value="pass"]');

            if (guessInput && passButton) {
                passButton.addEventListener('click', function () {
                    guessInput.removeAttribute('required');
                    guessInput.value = '';
                });
            }

            $(function () {
                $("#UserGuess").autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            // Controller'daki yeni metodu çağırıyoruz
                            url: "@Url.Action("SearchMoviesAndTv", "Home")",
                            dataType: "json",
                            data: {
                                term: request.term // Kullanıcının girdiği metin
                            },
                            success: function (data) {
                                // Controller'dan gelen veriyi doğrudan kullanıyoruz
                                // Çünkü zaten { label: "...", value: "..." } formatında geliyor
                                response(data);
                            },
                            error: function (xhr, status, error) {
                                console.error("Otomatik tamamlama hatası:", status, error);
                                response([]); // Hata durumunda boş liste döndür
                            }
                        });
                    },
                    minLength: 2 // En az 2 karakter girildiğinde arama yap
                });
            });
        });
    </script>
}